apiVersion: node.k8s.io/v1
kind: RuntimeClass
metadata:
  name: windows-2019
### Note you dont need this runtime class... but its elegant
### The containerd default "handler" for windows is runhcs-wcow-process
### This would allow you to make pods that, rather than directly targetting
### windows w/ taints, actually just lets the runtime class substitute the tolerations for you.
handler: runhcs-wcow-process
scheduling:
  nodeSelector:
    kubernetes.io/os: 'windows'
    kubernetes.io/arch: 'amd64'
    node.kubernetes.io/windows-build: '10.0.17763'
  tolerations:
  - effect: NoSchedule
    key: os
    operator: Equal
    value: "windows"
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: windows-server-iis
spec:
    selector:
        matchLabels:
            app: windows-server-iis
    replicas: 2
    template:
        metadata:
            labels:
                app: windows-server-iis
        spec:
            containers:
            - name: windows-server-iis
              image: mcr.microsoft.com/windows/servercore:1809
              imagePullPolicy: IfNotPresent
              command:
              - powershell.exe
              - -command
              - "Add-WindowsFeature Web-Server; Invoke-WebRequest -UseBasicParsing -Uri 'https://dotnetbinaries.blob.core.windows.net/servicemonitor/2.0.1.6/ServiceMonitor.exe' -OutFile 'C:\\ServiceMonitor.exe'; echo '<html><body><br/><br/><marquee><H1>Hello EKS!!!<H1><marquee></body><html>' > C:\\inetpub\\wwwroot\\default.html; C:\\ServiceMonitor.exe 'w3svc'; "
            nodeSelector:
              kubernetes.io/os: windows
            tolerations:
            - key: "os"
              operator: "Equal"
              value: "windows"
              effect: "NoSchedule"
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: nginx-deployment
spec:
    selector:
        matchLabels:
            app: nginx
    replicas: 1
    template:
        metadata:
            labels:
                app: nginx
        spec:
            containers:
            - name: nginx
              image: nginx:1.7.9
              securityContext:
                privileged: true
            nodeSelector:
                beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: iis
spec:
  type: NodePort
  selector:
    app: windows-server-iis
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30001
---
# for smoke testing... an ubuntu curl / wget image
apiVersion: v1
kind: Pod
metadata:
  name: busybox
  namespace: default
spec:
  containers:
  - image: harbor-repo.vmware.com/dockerhub-proxy-cache/library/busybox
    command:
      - sleep
      - "3600"
    imagePullPolicy: IfNotPresent
    name: busybox
  restartPolicy: Always
